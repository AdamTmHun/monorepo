/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Iso 639-1 language code.
 *
 * See https://www.iso.org/standard/22109.html
 */
export type LanguageCode =
  | "ab"
  | "aa"
  | "af"
  | "ak"
  | "sq"
  | "am"
  | "ar"
  | "an"
  | "hy"
  | "as"
  | "av"
  | "ae"
  | "ay"
  | "az"
  | "bm"
  | "ba"
  | "eu"
  | "be"
  | "bn"
  | "bh"
  | "bi"
  | "bs"
  | "br"
  | "bg"
  | "my"
  | "ca"
  | "km"
  | "ch"
  | "ce"
  | "ny"
  | "zh"
  | "cu"
  | "cv"
  | "kw"
  | "co"
  | "cr"
  | "hr"
  | "cs"
  | "da"
  | "dv"
  | "nl"
  | "dz"
  | "en"
  | "eo"
  | "et"
  | "ee"
  | "fo"
  | "fj"
  | "fi"
  | "fr"
  | "ff"
  | "gd"
  | "gl"
  | "lg"
  | "ka"
  | "de"
  | "ki"
  | "el"
  | "kl"
  | "gn"
  | "gu"
  | "ht"
  | "ha"
  | "he"
  | "hz"
  | "hi"
  | "ho"
  | "hu"
  | "is"
  | "io"
  | "ig"
  | "id"
  | "ia"
  | "ie"
  | "iu"
  | "ik"
  | "ga"
  | "it"
  | "ja"
  | "jv"
  | "kn"
  | "kr"
  | "ks"
  | "kk"
  | "rw"
  | "kv"
  | "kg"
  | "ko"
  | "kj"
  | "ku"
  | "ky"
  | "lo"
  | "la"
  | "lv"
  | "lb"
  | "li"
  | "ln"
  | "lt"
  | "lu"
  | "mk"
  | "mg"
  | "ms"
  | "ml"
  | "mt"
  | "gv"
  | "mi"
  | "mr"
  | "mh"
  | "ro"
  | "mn"
  | "na"
  | "nv"
  | "nd"
  | "ng"
  | "ne"
  | "se"
  | "no"
  | "nb"
  | "nn"
  | "ii"
  | "oc"
  | "oj"
  | "or"
  | "om"
  | "os"
  | "pi"
  | "pa"
  | "ps"
  | "fa"
  | "pl"
  | "pt"
  | "qu"
  | "rm"
  | "rn"
  | "ru"
  | "sm"
  | "sg"
  | "sa"
  | "sc"
  | "sr"
  | "sn"
  | "sd"
  | "si"
  | "sk"
  | "sl"
  | "so"
  | "st"
  | "nr"
  | "es"
  | "su"
  | "sw"
  | "ss"
  | "sv"
  | "tl"
  | "ty"
  | "tg"
  | "ta"
  | "tt"
  | "te"
  | "th"
  | "bo"
  | "ti"
  | "to"
  | "ts"
  | "tn"
  | "tr"
  | "tk"
  | "tw"
  | "ug"
  | "uk"
  | "ur"
  | "uz"
  | "ve"
  | "vi"
  | "vo"
  | "wa"
  | "cy"
  | "fy"
  | "wo"
  | "xh"
  | "yi"
  | "yo"
  | "za"
  | "zu";

export interface InlangConfigV1 {
  /**
   * A link to the JSON schema.
   *
   * Go to https://github.com/inlang/inlang/tree/main/packages/config/src/schemas to see a list of all schemas.
   *
   * Using a schema enables auto-complete and linting in most IDE's via https://json-schema.org/. Furthermore, defining a version of the config file allows for changes down the line with auto-migration scripts.
   */
  $schema: string;
  /**
   * The file format of the local translation files.
   *
   * Any other file format than Fluent makes use of a converter. Read more about converters and their limitations here https://inlang.dev/architecture/overview#support-for-file-formats-other-than-fluent.
   */
  fileFormat: "fluent" | "localizable-strings";
  /**
   * Where and how the local translation files are saved.
   *
   * Use '{languageCode}' as dynamic value.
   * @examples
   * 		`./translations/{languageCode}.json`
   * 		.`/{languageCode}/Localizable.strings`
   */
  pathPattern: string;
  /**
   * An ISO 639-1 human language code that determines the base language.
   */
  baseLanguageCode:
    | "ab"
    | "aa"
    | "af"
    | "ak"
    | "sq"
    | "am"
    | "ar"
    | "an"
    | "hy"
    | "as"
    | "av"
    | "ae"
    | "ay"
    | "az"
    | "bm"
    | "ba"
    | "eu"
    | "be"
    | "bn"
    | "bh"
    | "bi"
    | "bs"
    | "br"
    | "bg"
    | "my"
    | "ca"
    | "km"
    | "ch"
    | "ce"
    | "ny"
    | "zh"
    | "cu"
    | "cv"
    | "kw"
    | "co"
    | "cr"
    | "hr"
    | "cs"
    | "da"
    | "dv"
    | "nl"
    | "dz"
    | "en"
    | "eo"
    | "et"
    | "ee"
    | "fo"
    | "fj"
    | "fi"
    | "fr"
    | "ff"
    | "gd"
    | "gl"
    | "lg"
    | "ka"
    | "de"
    | "ki"
    | "el"
    | "kl"
    | "gn"
    | "gu"
    | "ht"
    | "ha"
    | "he"
    | "hz"
    | "hi"
    | "ho"
    | "hu"
    | "is"
    | "io"
    | "ig"
    | "id"
    | "ia"
    | "ie"
    | "iu"
    | "ik"
    | "ga"
    | "it"
    | "ja"
    | "jv"
    | "kn"
    | "kr"
    | "ks"
    | "kk"
    | "rw"
    | "kv"
    | "kg"
    | "ko"
    | "kj"
    | "ku"
    | "ky"
    | "lo"
    | "la"
    | "lv"
    | "lb"
    | "li"
    | "ln"
    | "lt"
    | "lu"
    | "mk"
    | "mg"
    | "ms"
    | "ml"
    | "mt"
    | "gv"
    | "mi"
    | "mr"
    | "mh"
    | "ro"
    | "mn"
    | "na"
    | "nv"
    | "nd"
    | "ng"
    | "ne"
    | "se"
    | "no"
    | "nb"
    | "nn"
    | "ii"
    | "oc"
    | "oj"
    | "or"
    | "om"
    | "os"
    | "pi"
    | "pa"
    | "ps"
    | "fa"
    | "pl"
    | "pt"
    | "qu"
    | "rm"
    | "rn"
    | "ru"
    | "sm"
    | "sg"
    | "sa"
    | "sc"
    | "sr"
    | "sn"
    | "sd"
    | "si"
    | "sk"
    | "sl"
    | "so"
    | "st"
    | "nr"
    | "es"
    | "su"
    | "sw"
    | "ss"
    | "sv"
    | "tl"
    | "ty"
    | "tg"
    | "ta"
    | "tt"
    | "te"
    | "th"
    | "bo"
    | "ti"
    | "to"
    | "ts"
    | "tn"
    | "tr"
    | "tk"
    | "tw"
    | "ug"
    | "uk"
    | "ur"
    | "uz"
    | "ve"
    | "vi"
    | "vo"
    | "wa"
    | "cy"
    | "fy"
    | "wo"
    | "xh"
    | "yi"
    | "yo"
    | "za"
    | "zu";
  /**
   * An array of ISO 639-1 human language codes that determine the available language codes.
   *
   * Must include the baseLanguageCode.
   */
  languageCodes: LanguageCode[];
  /**
   * A link to the pegjs grammar to detect the usage of i18n (translations) in the source code.
   *
   * Go to https://github.com/inlang/inlang/tree/main/packages/i18n-detection/src/grammars for predefined grammars.
   *
   * Using a link offers flexibility to define own grammars for specific environments. Go to
   */
  fetchI18nDetectionGrammarFrom?: string;
  /**
   * The replacement options when extracting pattern.
   *
   * Must include `{id}` in all options.
   * @example
   * 		['t("{id}")', 'i18n.{id}']
   */
  extractPatternReplacementOptions?: string[];
  [k: string]: unknown;
}
