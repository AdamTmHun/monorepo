datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Organization {
  id          String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String
  projects    Project[]    @relation
  users       User[]       @relation(name: "user")
  permissions Permission[]
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
}

model User {
  id              String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email           String         @unique
  organization_id String         @db.Uuid
  organizations   Organization[] @relation("user", fields: [organization_id], references: [id])
  permissions     Permission[]
  created_at      DateTime       @default(now())
  updated_at      DateTime       @updatedAt
}

model Project {
  id             String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  api_key        String       @unique
  name           String
  owner_id       String       @db.Uuid
  owner          Organization @relation(fields: [owner_id], references: [id])
  default_locale String
  locales        String
  text_keys      Key[]
  permissions    Permission[]
  created_at     DateTime     @default(now())
  updated_at     DateTime     @updatedAt
}

model Permission {
  organization_id String       @db.Uuid
  organization    Organization @relation(fields: [organization_id], references: [id])
  project_id      String       @db.Uuid
  project         Project      @relation(fields: [project_id], references: [id])
  user_id         String       @db.Uuid
  user            User         @relation(fields: [user_id], references: [id])
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt

  @@id([organization_id, project_id, user_id])
}

model Key {
  id           Int           @id @default(autoincrement())
  project_id   String        @db.Uuid
  project      Project       @relation(fields: [project_id], references: [id])
  key          String
  locale       String
  translations Translation[]
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
}

model Translation {
  id         Int      @id @default(autoincrement())
  key_id     Int
  key        Key      @relation(fields: [key_id], references: [id])
  locale     String
  text       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
