/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/key": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.key.id"];
          project_id?: parameters["rowFilter.key.project_id"];
          key?: parameters["rowFilter.key.key"];
          locale?: parameters["rowFilter.key.locale"];
          created_at?: parameters["rowFilter.key.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["key"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** key */
          key?: definitions["key"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.key.id"];
          project_id?: parameters["rowFilter.key.project_id"];
          key?: parameters["rowFilter.key.key"];
          locale?: parameters["rowFilter.key.locale"];
          created_at?: parameters["rowFilter.key.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.key.id"];
          project_id?: parameters["rowFilter.key.project_id"];
          key?: parameters["rowFilter.key.key"];
          locale?: parameters["rowFilter.key.locale"];
          created_at?: parameters["rowFilter.key.created_at"];
        };
        body: {
          /** key */
          key?: definitions["key"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/member": {
    get: {
      parameters: {
        query: {
          organization_id?: parameters["rowFilter.member.organization_id"];
          user_id?: parameters["rowFilter.member.user_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["member"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** member */
          member?: definitions["member"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          organization_id?: parameters["rowFilter.member.organization_id"];
          user_id?: parameters["rowFilter.member.user_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          organization_id?: parameters["rowFilter.member.organization_id"];
          user_id?: parameters["rowFilter.member.user_id"];
        };
        body: {
          /** member */
          member?: definitions["member"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/organization": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.organization.id"];
          name?: parameters["rowFilter.organization.name"];
          admin_user_id?: parameters["rowFilter.organization.admin_user_id"];
          created_at?: parameters["rowFilter.organization.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["organization"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** organization */
          organization?: definitions["organization"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.organization.id"];
          name?: parameters["rowFilter.organization.name"];
          admin_user_id?: parameters["rowFilter.organization.admin_user_id"];
          created_at?: parameters["rowFilter.organization.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.organization.id"];
          name?: parameters["rowFilter.organization.name"];
          admin_user_id?: parameters["rowFilter.organization.admin_user_id"];
          created_at?: parameters["rowFilter.organization.created_at"];
        };
        body: {
          /** organization */
          organization?: definitions["organization"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/project": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.project.id"];
          api_key?: parameters["rowFilter.project.api_key"];
          created_at?: parameters["rowFilter.project.created_at"];
          default_locale?: parameters["rowFilter.project.default_locale"];
          locales?: parameters["rowFilter.project.locales"];
          name?: parameters["rowFilter.project.name"];
          owner_id?: parameters["rowFilter.project.owner_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["project"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** project */
          project?: definitions["project"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.project.id"];
          api_key?: parameters["rowFilter.project.api_key"];
          created_at?: parameters["rowFilter.project.created_at"];
          default_locale?: parameters["rowFilter.project.default_locale"];
          locales?: parameters["rowFilter.project.locales"];
          name?: parameters["rowFilter.project.name"];
          owner_id?: parameters["rowFilter.project.owner_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.project.id"];
          api_key?: parameters["rowFilter.project.api_key"];
          created_at?: parameters["rowFilter.project.created_at"];
          default_locale?: parameters["rowFilter.project.default_locale"];
          locales?: parameters["rowFilter.project.locales"];
          name?: parameters["rowFilter.project.name"];
          owner_id?: parameters["rowFilter.project.owner_id"];
        };
        body: {
          /** project */
          project?: definitions["project"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/translation": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.translation.id"];
          key_id?: parameters["rowFilter.translation.key_id"];
          locale?: parameters["rowFilter.translation.locale"];
          text?: parameters["rowFilter.translation.text"];
          created_at?: parameters["rowFilter.translation.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["translation"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** translation */
          translation?: definitions["translation"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.translation.id"];
          key_id?: parameters["rowFilter.translation.key_id"];
          locale?: parameters["rowFilter.translation.locale"];
          text?: parameters["rowFilter.translation.text"];
          created_at?: parameters["rowFilter.translation.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.translation.id"];
          key_id?: parameters["rowFilter.translation.key_id"];
          locale?: parameters["rowFilter.translation.locale"];
          text?: parameters["rowFilter.translation.text"];
          created_at?: parameters["rowFilter.translation.created_at"];
        };
        body: {
          /** translation */
          translation?: definitions["translation"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/user": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user.id"];
          email?: parameters["rowFilter.user.email"];
          created_at?: parameters["rowFilter.user.created_at"];
          name?: parameters["rowFilter.user.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["user"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** user */
          user?: definitions["user"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user.id"];
          email?: parameters["rowFilter.user.email"];
          created_at?: parameters["rowFilter.user.created_at"];
          name?: parameters["rowFilter.user.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user.id"];
          email?: parameters["rowFilter.user.email"];
          created_at?: parameters["rowFilter.user.created_at"];
          name?: parameters["rowFilter.user.name"];
        };
        body: {
          /** user */
          user?: definitions["user"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  key: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Note:
     * This is a Foreign Key to `project.id`.<fk table='project' column='id'/>
     */
    project_id: string;
    key: string;
    locale: string;
    created_at: string;
  };
  member: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `organization.id`.<fk table='organization' column='id'/>
     */
    organization_id: string;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `user.id`.<fk table='user' column='id'/>
     */
    user_id: string;
  };
  organization: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    name: string;
    /**
     * Note:
     * This is a Foreign Key to `user.id`.<fk table='user' column='id'/>
     */
    admin_user_id: string;
    created_at: string;
  };
  project: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    api_key: string;
    created_at: string;
    default_locale: string;
    locales: string;
    name: string;
    /**
     * Note:
     * This is a Foreign Key to `organization.id`.<fk table='organization' column='id'/>
     */
    owner_id: string;
  };
  translation: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Note:
     * This is a Foreign Key to `key.id`.<fk table='key' column='id'/>
     */
    key_id: number;
    locale: string;
    text: string;
    created_at: string;
  };
  user: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    email: string;
    created_at: string;
    name: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** key */
  "body.key": definitions["key"];
  "rowFilter.key.id": string;
  "rowFilter.key.project_id": string;
  "rowFilter.key.key": string;
  "rowFilter.key.locale": string;
  "rowFilter.key.created_at": string;
  /** member */
  "body.member": definitions["member"];
  "rowFilter.member.organization_id": string;
  "rowFilter.member.user_id": string;
  /** organization */
  "body.organization": definitions["organization"];
  "rowFilter.organization.id": string;
  "rowFilter.organization.name": string;
  "rowFilter.organization.admin_user_id": string;
  "rowFilter.organization.created_at": string;
  /** project */
  "body.project": definitions["project"];
  "rowFilter.project.id": string;
  "rowFilter.project.api_key": string;
  "rowFilter.project.created_at": string;
  "rowFilter.project.default_locale": string;
  "rowFilter.project.locales": string;
  "rowFilter.project.name": string;
  "rowFilter.project.owner_id": string;
  /** translation */
  "body.translation": definitions["translation"];
  "rowFilter.translation.id": string;
  "rowFilter.translation.key_id": string;
  "rowFilter.translation.locale": string;
  "rowFilter.translation.text": string;
  "rowFilter.translation.created_at": string;
  /** user */
  "body.user": definitions["user"];
  "rowFilter.user.id": string;
  "rowFilter.user.email": string;
  "rowFilter.user.created_at": string;
  "rowFilter.user.name": string;
}

export interface operations {}

export interface external {}
